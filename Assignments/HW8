from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np
import pandas as pd

# Load dataset
data_url = "http://lib.stat.cmu.edu/datasets/boston
Links to an external site."
raw_df = pd.read_csv(data_url, sep="\s+", skiprows=22, header=None)
x = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])
y = raw_df.values[1::2, 2]

# convert to dataframe
df = pd.DataFrame(x, columns=["CRIM", "ZN", "INDUS", "CHAS", "NOX", "RM", "AGE", "DIS", "RAD", "TAX", "PTRATIO", "B", "LSTAT"])
df['MEDV'] = y

# standard scaler
scaler = StandardScaler()
xScaled = scaler.fit_transform(x)

# Split data into training and testing sets
xTrain, xTest, yTrain, yTest = train_test_split(xScaled, y, test_size=0.2, random_state=42)

# PCA, linear regression, mse function
def pcaLinReg(n_components):
  pca = PCA(n_components=n_components)
  xTrainPCA = pca.fit_transform(xTrain)
  xTestPCA = pca.transform(xTest)

  model = LinearRegression()
  model.fit(xTrainPCA, yTrain)
  yPred = model.predict(xTestPCA)

  mse = mean_squared_error(yTest, yPred)
  return mse, pca.explained_variance_ratio_.sum()

# trying various number of principal components
for n in range(1, x.shape[1] + 1):
  mse, variance_ratio = pcaLinReg(n)
  print(f'Components: {n}, MSE: {mse:.4f}, Explained Variance Ratio: {variance_ratio:.4f}')

# correlation, top 5 features
correlation = df.corr().abs()
highCorrFeat = correlation['MEDV'].sort_values(ascending=False).index[1:6].tolist()
featIndices = [list(df.columns).index(feature) for feature in highCorrFeat]

# train using features
xTrainFeat = xTrain[:, featIndices]
xTestFeat = xTest[:, featIndices]
modelFeat = LinearRegression()
modelFeat.fit(xTrainFeat, yTrain)
yPredFeat = modelFeat.predict(xTestFeat)

# calculate mse for features
mseFeat = mean_squared_error(yTest, yPredFeat)
print(f'Feature Selection MSE: {mseFeat:.4f}')


# Execution Results
# Components: 1, MSE: 42.3415, Explained Variance Ratio: 0.4607
# Components: 2, MSE: 43.3651, Explained Variance Ratio: 0.5757
# Components: 3, MSE: 29.3249, Explained Variance Ratio: 0.6734
# Components: 4, MSE: 29.8342, Explained Variance Ratio: 0.7418
# Components: 5, MSE: 30.1499, Explained Variance Ratio: 0.8076
# Components: 6, MSE: 29.7751, Explained Variance Ratio: 0.8589
# Components: 7, MSE: 29.7432, Explained Variance Ratio: 0.9008
# Components: 8, MSE: 29.6127, Explained Variance Ratio: 0.9309
# Components: 9, MSE: 29.6324, Explained Variance Ratio: 0.9515
# Components: 10, MSE: 28.6587, Explained Variance Ratio: 0.9684
# Components: 11, MSE: 27.7796, Explained Variance Ratio: 0.9822
# Components: 12, MSE: 26.0916, Explained Variance Ratio: 0.9953
# Components: 13, MSE: 24.2911, Explained Variance Ratio: 1.0000
# Feature Selection MSE: 27.8912
